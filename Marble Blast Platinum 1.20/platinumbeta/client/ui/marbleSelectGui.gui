//--- OBJECT WRITE BEGIN ---
new GuiControl(MarbleSelectGui) {
   profile = "GuiDefaultProfile";
   horizSizing = "width";
   vertSizing = "height";
   position = "0 0";
   extent = "640 480";
   minExtent = "8 8";
   visible = "1";
   helpTag = "0";

   new GuiBitmapCtrl() {
      profile = "GuiDefaultProfile";
      horizSizing = "center";
      vertSizing = "center";
      position = "118 75";
      extent = "404 330";
      minExtent = "48 92";
      visible = "1";
      helpTag = "0";
      bitmap = "./marbleSelect/marbleSelect.png";
      wrap = "0";
         resizeWidth = "1";
         maxLength = "255";
         canMinimize = "0";
         resizeHeight = "1";
         canMaximize = "0";
         canMove = "1";
         minSize = "50 50";
         canClose = "0";

      new GuiMLTextCtrl() {
         profile = "GuiComic24Profile";
         horizSizing = "center";
         vertSizing = "bottom";
         position = "95 15";
         extent = "213 29";
         minExtent = "8 8";
         visible = "1";
         helpTag = "0";
         lineSpacing = "2";
         allowColorChars = "0";
         maxChars = "-1";
      };
      new GuiBitmapButtonCtrl() {
         profile = "GuiButtonProfile";
         horizSizing = "center";
         vertSizing = "top";
         position = "161 275";
         extent = "81 41";
         minExtent = "8 8";
         visible = "1";
         command = "MessageCallback(marbleSelectGui,marbleSelectGui.callback);";
         accelerator = "return";
         helpTag = "0";
         text = "OK";
         groupNum = "-1";
         buttonType = "PushButton";
         repeatPeriod = "1000";
         repeatDecay = "1";
         bitmap = "./marbleSelect/select";
            simpleStyle = "0";
      };
      new GuiObjectView(MS_marbleViewer) {
         profile = "GuiDefaultProfile";
         horizSizing = "center";
         vertSizing = "bottom";
         position = "127 95";
         extent = "150 150";
         minExtent = "8 8";
         visible = "1";
         helpTag = "0";
         cameraZRot = "0";
         forceFOV = "0";
         skin = "base";
         cameraRotX = "0";
         cameraZRotSpeed = "0.001";
         orbitDistance = "1.3337";
         autoSize = "0";
      };
      new GuiMLTextCtrl() {
         profile = "GuiTextProfile";
         horizSizing = "center";
         vertSizing = "bottom";
         position = "84 50";
         extent = "236 14";
         minExtent = "8 8";
         visible = "1";
         helpTag = "0";
         lineSpacing = "2";
         allowColorChars = "0";
         maxChars = "-1";
      };
      new GuiBitmapCtrl() {
         profile = "GuiDefaultProfile";
         horizSizing = "right";
         vertSizing = "bottom";
         position = "50 12";
         extent = "300 39";
         minExtent = "8 8";
         visible = "1";
         helpTag = "0";
         bitmap = "./play/change_marble_text";
         wrap = "0";
      };
      new GuiMLTextCtrl(MS_MarbleText) {
         profile = "GuiMLTextProfile";
         horizSizing = "center";
         vertSizing = "bottom";
         position = "42 241";
         extent = "320 25";
         minExtent = "8 8";
         visible = "1";
         helpTag = "0";
         lineSpacing = "2";
         allowColorChars = "0";
         maxChars = "-1";
      };
      new GuiMLTextCtrl(MS_TitleText) {
         profile = "GuiComic24Profile";
         horizSizing = "center";
         vertSizing = "bottom";
         position = "95 66";
         extent = "213 28";
         minExtent = "8 8";
         visible = "1";
         helpTag = "0";
         lineSpacing = "2";
         allowColorChars = "0";
         maxChars = "-1";
      };
      new GuiBitmapButtonCtrl(MS_Next) {
         profile = "GuiButtonProfile";
         horizSizing = "right";
         vertSizing = "top";
         position = "313 146";
         extent = "81 41";
         minExtent = "8 8";
         visible = "1";
         command = "marbleSelectGui.next();";
         accelerator = "right";
         helpTag = "0";
         text = "Next";
         groupNum = "-1";
         buttonType = "PushButton";
         repeatPeriod = "1000";
         repeatDecay = "1";
         bitmap = "./marbleSelect/next";
            simpleStyle = "0";
      };
      new GuiBitmapButtonCtrl(MS_Prev) {
         profile = "GuiButtonProfile";
         horizSizing = "right";
         vertSizing = "top";
         position = "12 146";
         extent = "81 41";
         minExtent = "8 8";
         visible = "1";
         command = "marbleSelectGui.prev();";
         accelerator = "left";
         helpTag = "0";
         text = "Prev";
         groupNum = "-1";
         buttonType = "PushButton";
         repeatPeriod = "1000";
         repeatDecay = "1";
         bitmap = "./marbleSelect/prev";
            simpleStyle = "0";
      };
      new GuiBitmapButtonCtrl(MS_PrevCat) {
         profile = "GuiButtonProfile";
         horizSizing = "right";
         vertSizing = "top";
         position = "20 274";
         extent = "135 41";
         minExtent = "8 8";
         visible = "1";
         command = "marbleSelectGui.prevCat();";
         accelerator = "left";
         helpTag = "0";
         text = "Prev";
         groupNum = "-1";
         buttonType = "PushButton";
         repeatPeriod = "1000";
         repeatDecay = "1";
         bitmap = "./marbleSelect/prevcat";
            simpleStyle = "0";
      };
      new GuiBitmapButtonCtrl(MS_NextCat) {
         profile = "GuiButtonProfile";
         horizSizing = "right";
         vertSizing = "top";
         position = "249 274";
         extent = "135 41";
         minExtent = "8 8";
         visible = "1";
         command = "marbleSelectGui.nextCat();";
         accelerator = "left";
         helpTag = "0";
         text = "Prev";
         groupNum = "-1";
         buttonType = "PushButton";
         repeatPeriod = "1000";
         repeatDecay = "1";
         bitmap = "./marbleSelect/nextcat";
            simpleStyle = "0";
      };
   };
};
//--- OBJECT WRITE END ---

function MarbleSelectGui::init(%this) {
	//HiGuy: Set name fields
	%this.list["name", 0] = "Official Marbles";
	//HiGuy: For caps correction
	%this.list["fixed", "Official Marbles"] = "Official Marbles";

	//HiGuy: Add default marbles from MBP
	%list  = array("");
	%array = array("", "Staff\'s Original",        "ball-superball.dts", "base");   %list.addEntry(%array);
	%array = array("", "3D Marble",                "3dMarble.dts",       "base");   %list.addEntry(%array);
	%array = array("", "Mid P",                    "midp.dts",           "base");   %list.addEntry(%array);
	%array = array("", "Spade",                    "ball-superball.dts", "skin4");  %list.addEntry(%array);
	%array = array("", "GMD Logo",                 "ball-superball.dts", "skin5");  %list.addEntry(%array);
	%array = array("", "Textured Marble",          "ball-superball.dts", "skin6");  %list.addEntry(%array);
	%array = array("", "Golden Marble",            "ball-superball.dts", "skin7");  %list.addEntry(%array);
	%array = array("", "Rainbow Marble",           "ball-superball.dts", "skin8");  %list.addEntry(%array);
	%array = array("", "Brown Swirls",             "ball-superball.dts", "skin9");  %list.addEntry(%array);
	%array = array("", "Caution Stripes",          "ball-superball.dts", "skin10"); %list.addEntry(%array);
	%array = array("", "Earth",                    "ball-superball.dts", "skin11"); %list.addEntry(%array);
	%array = array("", "Golf ball",                "ball-superball.dts", "skin12"); %list.addEntry(%array);
	%array = array("", "Jupiter",                  "ball-superball.dts", "skin13"); %list.addEntry(%array);
	%array = array("", "MB Gold Marble",           "ball-superball.dts", "skin14"); %list.addEntry(%array);
	%array = array("", "MBP on the Marble!",       "ball-superball.dts", "skin15"); %list.addEntry(%array);
	%array = array("", "Moshe",                    "ball-superball.dts", "skin16"); %list.addEntry(%array);
	%array = array("", "Strong Bad",               "ball-superball.dts", "skin17"); %list.addEntry(%array);
	%array = array("", "Venus",                    "ball-superball.dts", "skin18"); %list.addEntry(%array);
	%array = array("", "Water",                    "ball-superball.dts", "skin19"); %list.addEntry(%array);
	%array = array("", "Evil Eye",                 "ball-superball.dts", "skin20"); %list.addEntry(%array);
	%array = array("", "Desert and Sky",           "ball-superball.dts", "skin21"); %list.addEntry(%array);
	%array = array("", "Dirt Marble",              "ball-superball.dts", "skin22"); %list.addEntry(%array);
	%array = array("", "Friction Textured Marble", "ball-superball.dts", "skin23"); %list.addEntry(%array);
	%array = array("", "Grass",                    "ball-superball.dts", "skin24"); %list.addEntry(%array);
	%array = array("", "Mars",                     "ball-superball.dts", "skin25"); %list.addEntry(%array);
	%array = array("", "Phil\'s Golf ball",        "ball-superball.dts", "skin26"); %list.addEntry(%array);
	%array = array("", "Molten",                   "ball-superball.dts", "skin27"); %list.addEntry(%array);
	%array = array("", "Perishingflames",          "ball-superball.dts", "skin28"); %list.addEntry(%array);
	%array = array("", "Phil\'sEmpire",            "ball-superball.dts", "skin29"); %list.addEntry(%array);
	%array = array("", "Matan\'s Red Dragon",      "ball-superball.dts", "skin30"); %list.addEntry(%array);
	%array = array("", "Metallic Marble",          "ball-superball.dts", "skin31"); %list.addEntry(%array);
	%array = array("", "Sun",                      "ball-superball.dts", "skin32"); %list.addEntry(%array);
	%array = array("", "Underwater",               "ball-superball.dts", "skin33"); %list.addEntry(%array);
	%array = array("", "GarageGames logo",         "garageGames.dts",    "base");   %list.addEntry(%array);
	%array = array("", "Big Marble 1",             "bm1.dts",            "base");   %list.addEntry(%array);
	%array = array("", "Big Marble 2",             "bm2.dts",            "base");   %list.addEntry(%array);
	%array = array("", "Big Marble 3",             "bm3.dts",            "base");   %list.addEntry(%array);
	%array = array("", "Small Marble 1",           "sm1.dts",            "base");   %list.addEntry(%array);
	%array = array("", "Small Marble 2",           "sm2.dts",            "base");   %list.addEntry(%array);
	%array = array("", "Small Marble 3",           "sm3.dts",            "base");   %list.addEntry(%array);

	//HiGuy: Custom list metadata is entered manually
	%this.list["array", "Official Marbles"] = %list;
	%this.list["base",  "Official Marbles"] = $usermods @ "/data/shapes/balls";
	%this.list["skins", "Official Marbles"] = false;
	%this.lists = 1;

	//HiGuy: Generate the lists for custom marbles
	%this.generateMarbleList();

	//HiGuy: Sets default marble selection
	%this.onWake();
}

function MarbleSelectGui::generateMarbleList(%this) {
	%regex = $usermods @ "/data/custom_marbles/*.dts";

	//HiGuy: This searches backwards. Shame.
	%_files = 0;
	for (%file = findFirstFile(%regex); %file !$= ""; %file = findNextFile(%regex))
		%_file[%_files ++] = %file;

	//HiGuy: Oddly enough, doing %var++ in torque increments it FIRST, then returns the incremented number.
	// In c++, that happens in the opposite order
	for (%i = %_files; %i > 0; %i --) {
		%file = %_file[%i];

		//HiGuy: File attributes
		%shapeName = fileBase(%file);
		%shapePath = filePath(%file);

		//HiGuy: Get which category it belongs to
		%category = fileBase(%shapePath);
		if (%category $= "custom_marbles")
			%category = "Uncategorized";

		echo("New marble:" SPC %file);
		echo("Shapepath:" SPC %shapePath);
		echo("Category:" SPC %category);

		//HiGuy: If it doens't have a category array assigned yet, create one!
		if (!isObject(%this.list["array", %category])) {
			//HiGuy: List metadata
			%this.list["name",  %this.lists] = %category;
			%this.list["index", %category]   = %this.lists;
			%this.list["fixed", %category]   = %category;
			%this.list["base",  %category]   = %shapePath;
			%this.list["skins", %category]   = false;

			//HiGuy: Actual list
			%this.list["array", %category] = array("");
			%this.lists ++;
		}

		%list = %this.list["array", %category];

		//HiGuy: Skin is always base for custom shape files
		%skin = "base";

		//HiGuy: ball-superball allows for custom skins, be sure to set the metadata
		if (%shapeName $= "ball-superball") {
			%this.list["skins", %category] = true;
			continue;
		}

		//HiGuy: Insert the skin into the array
		%array = array("", upperFirst(%shapeName), %shapeName @ ".dts", %skin);
		%list.addEntry(%array);
	}

	//HiGuy: Iterate through and find skins
	for (%i = 0; %i < %this.lists; %i ++) {
		%category = %this.list["name",  %i];
		%list     = %this.list["array", %category];
		if (%this.list["skins", %category]) {
			//devecho("MarbleSelect :: Iterating for skins in category" SPC %category);
			%skinregex  = %this.list["base", %category] @ "/*.marble.png";
			%skinregex2 = %this.list["base", %category] @ "/*.marble.jpg";

			//HiGuy: AREN'T BACKWARDS SEARCHES FUN?!
			%_files = 0;
			for (%file = findFirstFile(%skinregex);  %file !$= ""; %file = findNextFile(%skinregex))
				%_file[%_files ++] = %file;
			for (%file = findFirstFile(%skinregex2); %file !$= ""; %file = findNextFile(%skinregex2))
				%_file[%_files ++] = %file;

			for (%j = %_files; %j > 0; %j --) {
				%file = %_file[%j];

				//HiGuy: Don't mix these up
				if (filePath(%file) !$= %this.list["base", %category])
					continue;

				//HiGuy: File attributes
				%skin = fileBase(%file);
				%shapeName = "ball-superball.dts";

				//HiGuy: Insert the skin into the array
				%array = array("", upperFirst(fileBase(%skin)), %shapeName, fileBase(%skin));
				%list.addEntry(%array);
			}
		}
		devecho("MarbleSelect :: Category" SPC %category SPC "(" @ %i @ ")" SPC "Has" SPC %list.getSize() SPC "Entries!");
	}
}

//HiGuy: When the GUI is shown
function MarbleSelectGui::onWake(%this) {
	//HiGuy: Load prefs, search for skins and marbles

   //HiGuy: Default values so we don't get errors on the first run
	if ($pref::marbleCategory $= "" || $pref::marbleShape $= "" || $pref::marbleSkin $= "") {
	   $pref::marbleCategory = "Official Marbles";
      $pref::marbleShape = "ball-superball.dts";
	   $pref::marbleSkin = "base";
	}
	%category    = $pref::marbleCategory;
	%marbleShape = $pref::marbleShape;
	%marbleSkin  = $pref::marbleSkin;

	if (!isObject(%this.list["array", %category])) {
		%this.selectCategory("Official Marbles");
		ASSERT("Marble not Found!", "The previously selected custom marble was not found. The category it was in no longer exists.");
		return;
	}

	%this.category = %category;
	%this.categoryChoice = %this.lists["index", %category];
	%categoryBase = %this.list["base", %category];
	%this.selectCategory(%category);

	if (!isFile(%categoryBase @ "/" @ %marbleShape)) {
		%this.selectMarble(0);
		ASSERT("Marble not Found!", "The previously selected custom marble was not found. The marble shape file no longer exists.");
		return;
	}

	%this.marbleShape = %marbleShape;

	//HiGuy: Search for the marble with the specified skin
	if (%marbleSkin !$= "base") {
		if (!isFile(%categoryBase @ "/" @ %marbleSkin @ ".marble.png") && !isFile(%categoryBase @ "/" @ %marbleSkin @ ".marble.jpg")) {
			%this.selectMarble(0);
			ASSERT("Marble not Found!", "The previously selected custom marble was not found. The marble skin file no longer exists.");
			return;
		}
	}

	%this.marbleSkin = %marbleSkin;

	//HiGuy: Figure out which number it was
	%list = %this.list["array", %category];
	if (!isObject(%list)) {
		%this.selectCategory("Official Marbles");
		ASSERT("Marble not Found!", "The previously selected custom marble was not found. The category it was in is inaccessible.");
		return;
	}

	%marbleNum = -1;

	for (%i = 0; %i < %list.getSize(); %i ++) {
		%selectedArray = %list.getEntry(%i);
		%selectedShape = %selectedArray.getEntry(1);
		%selectedSkin = %selectedArray.getEntry(2);
		if (%marbleSkin $= "base") {
			if (%selectedShape $= %marbleShape) {
				%marbleNum = %i;
				devecho("Marble shape of" SPC %selectedShape SPC "matches pref variable of" SPC %marbleShape);
				break;
			}
		} else if (%selectedSkin $= %marbleSkin) {
			%marbleNum = %i;
			break;
		}
	}

	if (%marbleNum == -1) {
		%this.selectMarble(0);
		ASSERT("Marble not Found!", "The previously selected custom marble was not found. The marble shape or skin could not be located.");
		return;
	}

	%this.selectMarble(%marbleNum);
	devecho("Actually succeeded in selecting a custom marble!");
}

//HiGuy: When the GUI is hidden
function MarbleSelectGui::onSleep(%this) {
   %this.savePrefs();
   exportPrefs(true);
}

function MarbleSelectGui::savePrefs(%this) {
	//HiGuy: Save prefs for referencing later
	$pref::marbleCategory = %this.category;
	$pref::marbleShape    = %this.marbleShape;
	$pref::marbleSkin     = %this.marbleSkin;
}

//HiGuy: Used from other scripts, gets the custom marble data
function MarbleSelectGui::getSelection(%this) {
	//HiGuy: Get the base directory from the array
	%base = %this.list["base", %this.category];

	//HiGuy: Apply it to the marble pref
	%shapeName = $pref::marbleShape;
	%shapeFile = %base @ "/" @ %shapeName;

	//HiGuy: And return it
	return %shapeFile TAB $pref::marbleSkin;
}

//HiGuy: Update the interface
function MarbleSelectGui::update(%this) {
	//HiGuy: Gui controls:
	// MS_TitleText - Title text (above the marble), used for category names
	// MS_MarbleText - Marble text (below the marble), used for marble skin/shape names
	// MS_MarbleViewer - Marble object view

	MS_TitleText.setValue("<font:DomCasualD:28><just:center>" @ upperFirst(%this.category));

	//HiGuy: Get the category list of marbles
	%list = %this.list["array", %this.category];

	//HiGuy: Get the array for the selected marble
	%selectedArray = %list.getEntry(%this.marbleChoice);

	//HiGuy: Get the marble shapefile from the array
	%base = %this.list["base", %this.category];

	%shapeName = %selectedArray.getEntry(1);
	%shapeFile = %base @ "/" @ %shapeName;

	%shapeSkin = %selectedArray.getEntry(2);
	%shapeTitle = %selectedArray.getEntry(0);

	if (isFile(%shapeFile)) {
		MS_MarbleViewer.setModel(%shapeFile, %shapeSkin);

		MS_MarbleText.setValue("<font:DomCasualD:24><just:center>" @ upperFirst(%shapeTitle));

		%this.marbleShape = %shapeName;
		%this.marbleSkin  = %shapeSkin;
	} else {
		error("MarbleSelect :: Tried to set shapefile to" SPC %shapeFile SPC "but file does not exist.");
		MS_MarbleViewer.setEmpty();
	}
}

//HiGuy: When a new marble is selected
function MarbleSelectGui::selectMarble(%this, %marble) {
	%this.marbleChoice = %marble;
	%this.update();
   %this.savePrefs();
}

//HiGuy: When a new category is selected
function MarbleSelectGui::selectCategory(%this, %category) {
	//HiGuy: Fix caps
	%category = %this.list["fixed", %category];

	//HiGuy: Set it as selected
	%this.category = %category;

	if (!isObject(%this.list["array", %category])) {
		error("MarbleSelect :: Tried to set category" SPC %category SPC "but category does not exist.");
		return;
	}

	//HiGuy: Get the category array for referencing
	%list = %this.list["array", %category];

	//HiGuy: Get category data into fields
	%this.categoryCount = %list.getSize();
	%this.categoryArray = %list;

	//HiGuy: When switching categories, we want to select the first marble in that category
	%this.selectMarble(0);

	devecho("New category with name" SPC %category SPC "count" SPC %this.categoryCount);
}

//HiGuy: Selects the next marble
function MarbleSelectGui::next(%this) {
	//HiGuy: Increment
	%choice = %this.marbleChoice + 1;

	//HiGuy: Wrap around
	if (%choice >= %this.categoryCount)
		%choice = 0;

	//HiGuy: Set
	%this.selectMarble(%choice);
}

//HiGuy: Selects the previous marble
function MarbleSelectGui::prev(%this) {
	//HiGuy: Decrement
	%choice = %this.marbleChoice - 1;

	//HiGuy: Wrap around
	if (%choice < 0)
		%choice = %this.categoryCount - 1;

	//HiGuy: If we're still below zero, the category only has one marble
	if (%choice < 0)
		%choice = 0;

	//HiGuy: Set
	%this.selectMarble(%choice);
}

//HiGuy: Selects the next category
function MarbleSelectGui::nextCat(%this) {
	//HiGuy: Increment
	%choice = %this.categoryChoice + 1;

	//HiGuy: Wrap around
	if (%choice >= %this.lists)
		%choice = 0;

   //HiGuy: Var because we don't set it
	%this.categoryChoice = %choice;

	//HiGuy: Set
	%this.selectCategory(%this.list["name", %choice]);
}

//HiGuy: Selects the previous category
function MarbleSelectGui::prevCat(%this) {
	//HiGuy: Decrement
	%choice = %this.categoryChoice - 1;

	//HiGuy: Wrap around
	if (%choice < 0)
		%choice = %this.lists - 1;

	//HiGuy: If we're still below zero, the category only has one marble
	if (%choice < 0)
		%choice = 0;

   //HiGuy: Var because we don't set it
	%this.categoryChoice = %choice;

	//HiGuy: Set
	%this.selectCategory(%this.list["name", %choice]);
}

//HiGuy: Detach
MarbleSelectGui.schedule(0, init);
